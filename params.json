{
  "name": "HPGLGraphics",
  "tagline": "Processing Library for writing HPGL (plotter) files",
  "body": "## HPGLGraphics Library for Processing\r\n\r\nThis library implements [HPGL](https://en.wikipedia.org/wiki/HPGL) (Hewlett-Packard Graphics Language) file creation from Processing sketches. It works in much the same way as the PDF Export and DXF Export libraries bundled with Processing.\r\n\r\n### Getting started \r\n\r\n    import hpglgraphics.*;\r\n    HPGLGraphics hpgl = (HPGLGraphics) createGraphics(width, height, HPGLGraphics.HPGL);\r\n    \r\n    beginRecord(hpgl);\r\n    // do some drawing\r\n    endRecord();\r\n\r\nHave a look at the examples included with the library. These demonstrate:\r\n\r\n    line()\r\n    ellipse()\r\n    arc()     // PIE, CHORD and OPEN\r\n    rect()\r\n    vertex()\r\n    curveVertex()\r\n    bezierVertex()\r\n\r\n### Additional methods\r\n\r\nSome additional methods are available for controlling the HPGL output. This include:\r\n\r\n    selectPen(int pen);         // choose another pen (e.g. colour)\r\n    setPaperSize(String size);  // \"A3\" or \"A4\". Landscape orientation. Defaults to A4\r\n    setPath(String filename);   // optional. HPGL is output to this file in the sketch directory. \r\n                                // The default is \"output.hpgl\".\r\n\r\n### Tips:\r\n  * line() always finishes with Pen Up. To draw continuous joined lines without lifting the pen, use vertex() instead.\r\n\r\nTo check your HPGL files, I recommend [hp2xx](https://www.gnu.org/software/hp2xx/)\r\n\r\nThis library was inspired by, and builds upon, these libraries:\r\n  * [HPGL-Plotter](http://sjunnesson.github.io/HPGL-Plotter/)\r\n  * [HPGL](https://github.com/gregersn/HPGL)\r\n\r\nThe website for the library is [here](https://ciaron.github.io/HPGLGraphics).\r\nSource code is [here](https://github.com/ciaron/HPGLGraphics)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}